CREATE TABLE Auteurs (
    id_auteur INTEGER PRIMARY KEY,
    nom_auteur TEXT NOT NULL, -- il se trouve que TEXT permet d'utiliser seulement des lettres (pas de chiffres...)
    prenom_auteur TEXT NOT NULL
);

CREATE TABLE Categories (
    id_categorie INTEGER PRIMARY KEY,
    nom_categorie TEXT UNIQUE NOT NULL
);

CREATE TABLE Livres (
    id_livre INTEGER PRIMARY KEY,
    titre TEXT NOT NULL,
    date_publication DATE,
    id_categorie INTEGER,
    id_auteur INTEGER,
    FOREIGN KEY (id_categorie) REFERENCES Categories(id_categorie),
    FOREIGN KEY (id_auteur) REFERENCES Auteurs(id_auteur)
);

CREATE TABLE Membres (
    id_membre INTEGER PRIMARY KEY,
    nom_membre TEXT NOT NULL,
    prenom_membre TEXT NOT NULL,
    email_membre TEXT UNIQUE NOT NULL
);

CREATE TABLE Emprunter (
    date_emprunt DATE NOT NULL,
    date_retour DATE,
    id_membre INTEGER,
    id_livre INTEGER,
    PRIMARY KEY (id_membre, id_livre),
    FOREIGN KEY (id_membre) REFERENCES Membres(id_membre),
    FOREIGN KEY (id_livre) REFERENCES Livres(id_livre),
    CHECK (date_retour IS NULL OR date_retour >= date_emprunt)
);

CREATE TABLE Ecrit (
    id_auteur INTEGER,
    id_livre INTEGER,
    PRIMARY KEY (id_auteur, id_livre),
    FOREIGN KEY (id_auteur) REFERENCES Auteurs(id_auteur),
    FOREIGN KEY (id_livre) REFERENCES Livres(id_livre)
);

CREATE TABLE Appartient_A (
    id_categorie INTEGER,
    id_livre INTEGER,
    PRIMARY KEY (id_categorie, id_livre),
    FOREIGN KEY (id_categorie) REFERENCES Categories(id_categorie),
    FOREIGN KEY (id_livre) REFERENCES Livres(id_livre)
);

